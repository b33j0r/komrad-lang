# Basic test for predicate-based conditionals in Komrad

If = {
	[_(true) _{consequent}] {
		*consequent
	}

	[_(false) _{consequent}] {}

	[_(true) _{consequent} else _{alternative}] {
		*consequent
	}

	[_(false) _{consequent} else _{alternative}] {
		*alternative
	}
}

if = spawn If {}

## Basics

# Test with true condition
if (true) {
	Io println "This will be printed because the condition is true."
}

# Test with false condition
if (false) {
	Io println "This will not be printed because the condition is false."
}

# Test with else clause
if (true) {
	Io println "This will be printed because the condition is true."
} else {
	Io println "This will not be printed because the condition is true."
}

# Test with else clause when condition is false
if (false) {
	Io println "This will not be printed because the condition is false."
} else {
	Io println "This will be printed because the condition is false."
}

## Equalities and Comparisons

# Test equality
if (1 == 1) {
    Io println "1 is equal to 1."
}

if (1 != 2) {
    Io println "1 is not equal to 2."
}

# Test greater than
if (2 > 1) {
    Io println "2 is greater than 1."
}

# Test less than
if (1 < 2) {
    Io println "1 is less than 2."
}

# Test greater than or equal to
if (2 >= 2) {
    Io println "2 is greater than or equal to 2."
}

# Test less than or equal to
if (1 <= 2) {
    Io println "1 is less than or equal to 2."
}

## Variables

a = 5
b = 10

Io println "a = " + a + ", b = " + b

# Test variable equality
if (a == b) {
    Io println "a is equal to b."
} else {
    Io println "a is not equal to b."
}

# Test variable comparison
if (a < b) {
    Io println "a is less than b."
} else {
    Io println "a is not less than b."
}
